/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.booking;

import business.Airlines;
import business.Fleet;
import business.Flight;
import business.FlightCatalog;
import business.Plane;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author runyangzhou
 */
public class BookingSearchJPanel extends javax.swing.JPanel {
    private JPanel displayJPanel;
    private FlightCatalog flightCatalog;
    private Airlines airlines;
    private String[] place = {"Shanghai","Boston","New York","Tokyo","Toronto","London","Paris","Seattle","Chicago","Cancun","Orlando"};
    FlightCatalog result;
    /**
     * Creates new form bookingSearchJPanel
     */
    public BookingSearchJPanel(JPanel displayJPanel, FlightCatalog flightCatalog, Airlines airlines) {
        initComponents();
        this.displayJPanel = displayJPanel;
        this.flightCatalog = flightCatalog;
        this.airlines = airlines;
        for(String s : place){
            comboBoxDeparture.addItem(s);
            comboBoxArrival.addItem(s);
        }
        for(Fleet fleet : airlines.getFleetList())
            comboBoxFleet.addItem(fleet.toString());
        
    }
    
    public void populate(){
        DefaultTableModel dtm = (DefaultTableModel) tblBooking.getModel();
        dtm.setRowCount(0);
        
        for(Flight flight : flightCatalog.getFlightList()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = flight;
            row[1] = flight.getDepartureAirport();
            row[2] = flight.getArrivalAirport();
            DateFormat df = new SimpleDateFormat("MM/dd/yy HH:mm");
            row[3] = df.format(flight.getDepartureDate());
            row[4] = flight.getAvilSeats();
            dtm.addRow(row);
        }
    }
    
    public void populate(FlightCatalog f){
        DefaultTableModel dtm = (DefaultTableModel) tblBooking.getModel();
        dtm.setRowCount(0);
        
        for(Flight flight : f.getFlightList()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = flight;
            row[1] = flight.getDepartureAirport();
            row[2] = flight.getArrivalAirport();
            DateFormat df = new SimpleDateFormat("MM/dd/yy HH:mm");
            row[3] = df.format(flight.getDepartureDate());
            row[4] = flight.getAvilSeats();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkBoxEarliest = new javax.swing.JCheckBox();
        btnSearch = new javax.swing.JButton();
        comboBoxFleet = new javax.swing.JComboBox();
        comboBoxArrival = new javax.swing.JComboBox();
        comboBoxDeparture = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBooking = new javax.swing.JTable();
        btnBook = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        checkBoxEarliest.setText("Find earliest flight");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        comboBoxFleet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        comboBoxArrival.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));

        comboBoxDeparture.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        comboBoxDeparture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDepartureActionPerformed(evt);
            }
        });

        tblBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial Number", "Departure", "Arrival", "Date", "Seats"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblBooking);

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(167, 167, 167)
                .addComponent(btnBook)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxArrival, 0, 85, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxFleet, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBoxEarliest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkBoxEarliest)
                    .addComponent(btnSearch)
                    .addComponent(comboBoxFleet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxArrival, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxDeparture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnBook)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(22, 22, 22))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblBooking.getSelectedRow();
        if(selectedRow >= 0){
            Flight flight = (Flight)tblBooking.getValueAt(selectedRow, 0);
            SeatsPickJPanel panel = new SeatsPickJPanel(displayJPanel, flight, result);
            displayJPanel.add("SeatsPickJPanel", panel);
            CardLayout layout = (CardLayout)displayJPanel.getLayout();
            layout.next(displayJPanel);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a Row!!");
        }
    }//GEN-LAST:event_btnBookActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        result = new FlightCatalog();
        ArrayList<Flight> flightList = result.getFlightList();
        
        boolean[] choose = new boolean[3];
        choose[0] = ((String) comboBoxDeparture.getSelectedItem()).equals("All");
        choose[1] = ((String) comboBoxArrival.getSelectedItem()).equals("All");
        choose[2] = ((String) comboBoxFleet.getSelectedItem()).equals("All");
//        choose[3] = checkBoxEarliest
        String[] chooseS = new String[3];
        chooseS[0] = (String) comboBoxDeparture.getSelectedItem();
        chooseS[1] = (String) comboBoxArrival.getSelectedItem();
        chooseS[2] = (String) comboBoxFleet.getSelectedItem();
        if(choose[0] && choose[1] && choose[2]){
            result = flightCatalog;
        }
        if(!choose[0] && choose[1] && choose[2]){
            for(Flight flight : flightCatalog.getFlightList())
                if(flight.getDepartureAirport().equals(chooseS[0]))
                    flightList.add(flight);
        }
        if(choose[0] && !choose[1] && choose[2]){
            for(Flight flight : flightCatalog.getFlightList())
                if(flight.getDepartureAirport().equals(chooseS[1]))
                    flightList.add(flight);
        }
        if(choose[0] && choose[1] && !choose[2]){
            Plane plane;
            for(Fleet fleet : airlines.getFleetList())
                if(fleet.getFleetName().equals(chooseS[2]))
                    for(Flight flight : flightCatalog.getFlightList())
                        if(fleet.getPlaneList().contains(flight.getPlane()))
                            flightList.add(flight);
        }
        if(!choose[0] && !choose[1] && choose[2]){
            for(Flight flight : flightCatalog.getFlightList())
                if(flight.getDepartureAirport().equals(chooseS[0]) && flight.getArrivalAirport().equals(chooseS[1]))
                    flightList.add(flight);
        }
        if(!choose[0] && choose[1] && !choose[2]){
            Plane plane;
            for(Fleet fleet : airlines.getFleetList())
                if(fleet.getFleetName().equals(chooseS[2]))
                    for(Flight flight : flightCatalog.getFlightList())
                        if(fleet.getPlaneList().contains(flight.getPlane()) && flight.getDepartureAirport().equals(chooseS[0]))
                            flightList.add(flight);
        }
        if(choose[0] && !choose[1] && !choose[2]){
            Plane plane;
            for(Fleet fleet : airlines.getFleetList())
                if(fleet.getFleetName().equals(chooseS[2]))
                    for(Flight flight : flightCatalog.getFlightList())
                        if(fleet.getPlaneList().contains(flight.getPlane()) && flight.getArrivalAirport().equals(chooseS[1]))
                            flightList.add(flight);
        }
        if(!choose[0] && !choose[1] && !choose[2]){
            Plane plane;
            for(Fleet fleet : airlines.getFleetList())
                if(fleet.getFleetName().equals(chooseS[2]))
                    for(Flight flight : flightCatalog.getFlightList())
                        if(fleet.getPlaneList().contains(flight.getPlane()) && flight.getArrivalAirport().equals(chooseS[1])
                                && flight.getDepartureAirport().equals(chooseS[0]))
                            flightList.add(flight);
        }
        
        if(checkBoxEarliest.isSelected()){
            Flight earliestFlight = result.getFlightList().get(0);
            for(Flight flight : result.getFlightList()){
                if(flight.getDepartureDate().before(earliestFlight.getDepartureDate())){
                    earliestFlight = flight;
                }
            }
            result = new FlightCatalog();
            result.getFlightList().add(earliestFlight);
        }
        populate(result);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout layout = (CardLayout) displayJPanel.getLayout();
        layout.previous(displayJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboBoxDepartureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDepartureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxDepartureActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkBoxEarliest;
    private javax.swing.JComboBox comboBoxArrival;
    private javax.swing.JComboBox comboBoxDeparture;
    private javax.swing.JComboBox comboBoxFleet;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblBooking;
    // End of variables declaration//GEN-END:variables
}
